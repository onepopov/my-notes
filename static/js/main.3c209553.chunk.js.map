{"version":3,"sources":["store/types/notes.js","store/reducers/notes.js","components/ListNotes/Popup/index.js","components/ListNotes/Note/index.js","assets/note_add-24px.svg","hooks/useDebounce.js","components/Search/index.js","components/ListNotes/index.js","components/Content/index.js","App.js","store/reducers/index.js","store/index.js","index.js"],"names":["ADD_NOTE","REMOVE_NOTE","CHANGE_TITLE","SET_CONTENT","SELECT_NOTE","SET_TITLE","initState","notesList","selectedNote","notes","state","type","payload","types","id","uuidv4","date","Date","content","title","slice","filter","item","map","note","Object","assign","Popup","useSelector","dispatch","useDispatch","className","onClick","Note","selected","useState","isOpen","open","useDebounce","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","Search","search","query","setQuery","debouncedQuery","onChange","e","target","ListNotes","mainDispatch","searchedNotes","setLists","src","AddIcon","width","alt","indexOf","Content","find","text","setText","setTitle","debouncedContent","debouncedTitle","handlerTitle","handlerInput","App","require","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","generateStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3c209553.chunk.js","sourcesContent":["export default {\n    ADD_NOTE: \"ADD_NOTE\",\n    REMOVE_NOTE: \"REMOVE_NOTE\",\n    CHANGE_TITLE: \"CHANGE_TITLE\",\n    SET_CONTENT: \"SET_CONTENT\",\n    SELECT_NOTE: \"SELECT_NOTE\",\n    SET_TITLE: \"SET_TITLE\"\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport types from \"../types/notes\";\n\nconst initState = {\n    notesList: [],\n    selectedNote: \"\",\n};\n\nexport function notes(state = initState, {type, payload}) {\n    switch (type) {\n        case types.ADD_NOTE:\n            const id = uuidv4();\n            return {...state, notesList: [...state.notesList, {id, date: new Date(), content: \"\", title: \"Untitled\", selectedNote: id}]};\n        case types.REMOVE_NOTE:\n            return {...state, notesList: state.notesList.slice().filter((item)=> item.id !== payload.id), selectedNote: \"\"};\n        case types.SELECT_NOTE:\n            return {...state, selectedNote: payload.id};\n        case types.SET_TITLE:\n            return {...state, notesList: state.notesList.map((note) => {\n                    if(note.id === payload.id) {\n                        return Object.assign({}, note, {\n                            title: payload.title\n                        });\n                    }\n                    return note;\n                })};\n        case types.SET_CONTENT:\n            return {...state, notesList: state.notesList.map((note) => {\n                    if(note.id === payload.id) {\n                        return Object.assign({}, note, {\n                            content: payload.content\n                        });\n                    }\n                    return note;\n                })};\n        default:\n            return state;\n    }\n}\n","import React from \"react\";\nimport \"./styles.scss\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport types from \"../../../store/types/notes\";\n\nfunction Popup() {\n    const notes = useSelector(state => state.notes);\n    const dispatch = useDispatch();\n    const deleteNote = () => {\n        dispatch({type: types.REMOVE_NOTE, payload: {id: notes.selectedNote}});\n    };\n    return(<div className=\"popup\">\n        <button onClick={deleteNote}>Delete</button>\n    </div>)\n}\n\n\nexport default Popup;\n","import React, {useState} from \"react\";\nimport \"./styles.scss\";\nimport {useDispatch} from \"react-redux\";\nimport types from \"../../../store/types/notes\";\nimport Popup from \"../Popup\";\n\nfunction Note({note, selected}) {\n    const dispatch = useDispatch();\n    const [isOpen, open] = useState(false);\n    const selectNote = () => {\n        dispatch({type: types.SELECT_NOTE, payload: {id: note.id}});\n    };\n    return(<li className={selected ? \"note note--selected\": \"note\"} onClick={selectNote}>\n        <span className=\"note__title\">{note.title}</span>{selected && <button className=\"note__actions\" onClick={() => open(!isOpen)}></button>}\n        {isOpen && <Popup />}\n    </li>);\n}\nexport default Note;\n","export default __webpack_public_path__ + \"static/media/note_add-24px.0b212855.svg\";","import React, { useState, useEffect } from 'react';\n\nexport function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value]\n    );\n\n    return debouncedValue;\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"./styles.scss\";\nimport {useDebounce} from \"../../hooks/useDebounce\";\nimport {useDispatch} from \"react-redux\";\n\nfunction Search({search}) {\n    const [query, setQuery] = useState(\"\");\n    const debouncedQuery = useDebounce(query, 300);\n\n    const handleInput = (e) => {\n        setQuery(e.target.value);\n    };\n\n    useEffect(() => {\n            search(debouncedQuery);\n    }, [debouncedQuery]);\n    return(<div className=\"search\">\n        <input className=\"search__input\" type=\"text\" onChange={handleInput}/>\n    </div>)\n}\n\n\nexport default Search;\n","import React, {  useEffect, useState  } from \"react\";\nimport Note from \"./Note\";\nimport \"./styles.scss\";\nimport AddIcon from \"../../assets/note_add-24px.svg\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport types from \"../../store/types/notes\";\nimport Search from \"../Search\";\n\n\nfunction ListNotes() {\n    const notes = useSelector(state => state.notes);\n    const mainDispatch = useDispatch();\n    const [searchedNotes, setLists] = useState( notes.notesList);\n    const addNote = () => {\n        mainDispatch({type: types.ADD_NOTE});\n    };\n    const search = (query) => {\n        setLists((state) => notes.notesList.filter((note => note.title.indexOf(query) !== -1)));\n    };\n\n    useEffect(() => {\n        setLists(notes.notesList);\n    }, [notes]);\n\n\n    return(<nav className=\"list\">\n        <button className=\"list__btn-add\" onClick={addNote}><img src={AddIcon} width=\"40px\" alt=\"add\"/>create</button>\n        <ul>\n            {searchedNotes.map(note => <Note selected={notes.selectedNote === note.id} note={note} key={note.id}/>)}\n        </ul>\n        <Search search={search}/>\n    </nav>)\n}\n\n\nexport default ListNotes;\n","import React, {useState, useEffect} from \"react\";\nimport {useDebounce} from \"../../hooks/useDebounce\";\n\nimport \"./styles.scss\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport types from \"../../store/types/notes\";\n\n\n\n\nfunction Content() {\n\n    const notes = useSelector((state) => state.notes);\n    const selectedNote = notes.notesList.find((note) => note.id === notes.selectedNote);\n    const [text, setText] = useState(selectedNote ? selectedNote.content : null);\n    const [title, setTitle] = useState(selectedNote ? selectedNote.title : \"Untitled\");\n    const dispatch = useDispatch();\n    const debouncedContent = useDebounce(text, 300);\n    const debouncedTitle = useDebounce(title, 300);\n\n    const handlerInput = (text) => {\n        setText(text);\n    };\n\n    const handlerTitle = (title) => {\n        setTitle(title);\n    };\n\n    useEffect(() => {\n        selectedNote && setText(selectedNote.content);\n        selectedNote && setTitle(selectedNote.title);\n    }, [notes]);\n\n    useEffect(() => {\n\n        if(selectedNote && text !== selectedNote.content) {\n            dispatch({type: types.SET_CONTENT, payload: {id: notes.selectedNote,content: debouncedContent}});\n        }\n    }, [debouncedContent]);\n\n    useEffect(() => {\n        if(selectedNote && title !== selectedNote.title) {\n            dispatch({type: types.SET_TITLE, payload: {id: notes.selectedNote, title: debouncedTitle}});\n        }\n    }, [debouncedTitle]);\n\n\n\n    return (\n        <main className=\"content\">\n            {selectedNote ? <>\n                <input className=\"content__title\" type=\"text\" value={title} onChange={(e) => handlerTitle(e.target.value)}/>\n                <textarea className=\"content__field\" value={text} onChange={(e) => handlerInput(e.target.value)}></textarea>\n                </> : <section className=\"content__info\">Note not selected</section>    }\n        </main>\n    );\n}\n\nexport default Content;\n","import React from \"react\";\n\nimport \"./index.scss\";\nimport ListNotes from \"./components/ListNotes\";\nimport Content from \"./components/Content\";\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n      <ListNotes />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers} from \"redux\";\n\nconst { notes } = require(\"./notes\");\n\n\n\nexport default combineReducers({\n    notes\n});\n\n","import {createStore} from \"redux\";\nimport rootReducer from \"./reducers\";\nimport storage from 'redux-persist/lib/storage';\nimport {persistReducer, persistStore} from \"redux-persist\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n\n\nexport default () => {\n    const store = createStore(persistedReducer);\n    const persistor = persistStore(store)\n    return { store, persistor }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\nimport {Provider} from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport App from './App';\n\nimport generateStore from \"./store\";\n\n\nconst store = generateStore().store;\nconst persistor = generateStore().persistor;\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <PersistGate loading={null} persistor={persistor}>\n            <App />\n          </PersistGate>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}